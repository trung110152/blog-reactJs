{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\84981\\\\ReactJs-Full\\\\demo-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n// import Navbar from \"./components/Navbar\";\n// import Login from \"./pages/Login\";\n// import {Route, Routes} from \"react-router\";\n// import Register from \"./pages/Register\";\n// import Home from \"./pages/home/Home\";\n// import ListBlog from \"./pages/blog/ListBlog\";\n// import AddBlog from \"./pages/blog/AddBlog\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import {useEffect, useState} from \"react\";\n// import {getBlogs} from \"./services/blogsService\";\n// import EditBlog from \"./pages/blog/EditBlog\";\n// import MyBlogs from \"./pages/blog/MyBlogs\";\n//\n// function App() {\n//     // service -> slice -> store -> selector -> useEffect\n//     const user = useSelector(state=>{\n//         return state.user.currentUser\n//     })\n//     return (\n//         <>\n//             <div className=\"container-fluid\">\n//                 <Routes>\n//                     <Route path={''} element={<Login/>}/>\n//                     <Route path={'register'} element={<Register/>}/>\n//                     {\n//                      user !== 'Username is not existed' && user !== 'Password is wrong'?\n//                          <Route path={'home'} element={<Home/>}>\n//                              <Route path={''} element={<ListBlog/>}/>\n//                              <Route path={'add-blog'} element={<AddBlog/>}/>\n//                              <Route path={'edit-blog/:id'} element={<EditBlog/>}/>\n//                              <Route path={'my-blogs'} element={<MyBlogs/>}/>\n//                          </Route>:\n//                              <Route path={''} element={<Login/>}/>\n//                     }\n//\n//                 </Routes>\n//             </div>\n//         </>\n//     );\n// }\n//\n// export default App;\n\nimport ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(\"\");\n  const testSchema = Yup.object().shape({\n    name: Yup.string().required(\"Enter Name\"),\n    year: Yup.string().required(\"Select Year\")\n  });\n  const initialValues = {\n    name: \"\",\n    year: \"\"\n  };\n  const handleYearChange = (selectedYear, values) => {\n    values.year = selectedYear.value;\n    console.log(selectedYear);\n    setSelectedYear(selectedYear);\n  };\n  const yearOptions = [{\n    value: \"1960\",\n    label: \"1960\"\n  }, {\n    value: \"1961\",\n    label: \"1961\"\n  }, {\n    value: \"1962\",\n    label: \"1962\"\n  }, {\n    value: \"1963\",\n    label: \"1963\"\n  }, {\n    value: \"1964\",\n    label: \"1964\"\n  }, {\n    value: \"1965\",\n    label: \"1965\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: testSchema,\n    initialValues: initialValues,\n    children: _ref => {\n      let {\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        touched,\n        handleSubmit,\n        setFieldTouched\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              name: \"name\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              onChange: handleChange(\"name\"),\n              style: {\n                width: \"100%\",\n                zIndex: 0\n              },\n              value: values.name,\n              onBlur: () => {\n                console.log(\"name\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), errors.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Year\",\n              value: selectedYear,\n              onChange: selectedOption => {\n                handleYearChange(selectedOption);\n                // handleYearChange(selectedOption, values);\n                // values.year = selectedOption.value;\n                console.log(\"values\", values.year);\n                handleChange(\"year\");\n              },\n              isSearchable: true,\n              options: yearOptions,\n              name: \"year\",\n              isLoading: false,\n              loadingMessage: () => \"Fetching year\",\n              noOptionsMessage: () => \"Year appears here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), errors.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            style: {\n              marginTop: \"24px\",\n              marginBottom: \"10px\"\n            },\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"uZblbXh/49RRCckIKFRiqSk3Brw=\");\n_c = App;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 150,\n  columnNumber: 17\n}, this), rootElement);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ReactDOM","React","useState","Grid","TextField","Button","Formik","Yup","Select","App","selectedYear","setSelectedYear","testSchema","object","shape","name","string","required","year","initialValues","handleYearChange","values","value","console","log","yearOptions","label","handleChange","handleBlur","errors","touched","handleSubmit","setFieldTouched","width","zIndex","selectedOption","marginTop","marginBottom","rootElement","document","getElementById","render"],"sources":["C:/Users/84981/ReactJs-Full/demo-react/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n// import Navbar from \"./components/Navbar\";\n// import Login from \"./pages/Login\";\n// import {Route, Routes} from \"react-router\";\n// import Register from \"./pages/Register\";\n// import Home from \"./pages/home/Home\";\n// import ListBlog from \"./pages/blog/ListBlog\";\n// import AddBlog from \"./pages/blog/AddBlog\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import {useEffect, useState} from \"react\";\n// import {getBlogs} from \"./services/blogsService\";\n// import EditBlog from \"./pages/blog/EditBlog\";\n// import MyBlogs from \"./pages/blog/MyBlogs\";\n//\n// function App() {\n//     // service -> slice -> store -> selector -> useEffect\n//     const user = useSelector(state=>{\n//         return state.user.currentUser\n//     })\n//     return (\n//         <>\n//             <div className=\"container-fluid\">\n//                 <Routes>\n//                     <Route path={''} element={<Login/>}/>\n//                     <Route path={'register'} element={<Register/>}/>\n//                     {\n//                      user !== 'Username is not existed' && user !== 'Password is wrong'?\n//                          <Route path={'home'} element={<Home/>}>\n//                              <Route path={''} element={<ListBlog/>}/>\n//                              <Route path={'add-blog'} element={<AddBlog/>}/>\n//                              <Route path={'edit-blog/:id'} element={<EditBlog/>}/>\n//                              <Route path={'my-blogs'} element={<MyBlogs/>}/>\n//                          </Route>:\n//                              <Route path={''} element={<Login/>}/>\n//                     }\n//\n//                 </Routes>\n//             </div>\n//         </>\n//     );\n// }\n//\n// export default App;\n\n\nimport ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from \"react-select\";\n\n\nfunction App() {\n    const [selectedYear, setSelectedYear] = useState(\"\");\n\n    const testSchema = Yup.object().shape({\n        name: Yup.string().required(\"Enter Name\"),\n        year: Yup.string().required(\"Select Year\")\n    });\n\n    const initialValues = {\n        name: \"\",\n        year: \"\"\n    };\n\n    const handleYearChange = (selectedYear, values) => {\n        values.year = selectedYear.value;\n        console.log(selectedYear);\n        setSelectedYear(selectedYear);\n    };\n\n    const yearOptions = [\n        { value: \"1960\", label: \"1960\" },\n        { value: \"1961\", label: \"1961\" },\n        { value: \"1962\", label: \"1962\" },\n        { value: \"1963\", label: \"1963\" },\n        { value: \"1964\", label: \"1964\" },\n        { value: \"1965\", label: \"1965\" }\n    ];\n\n    return (\n        <Formik validationSchema={testSchema} initialValues={initialValues}>\n            {({\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  touched,\n                  handleSubmit,\n                  setFieldTouched\n              }) => {\n                return (\n                    <>\n                        <Grid container spacing={2}>\n                            <Grid item md={12} xs={12}>\n                                <TextField\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    onChange={handleChange(\"name\")}\n                                    style={{ width: \"100%\", zIndex: 0 }}\n                                    value={values.name}\n                                    onBlur={() => {\n                                        console.log(\"name\");\n                                    }}\n                                />\n                                {errors.name}\n                            </Grid>\n\n                            <Grid item md={6} xs={12}>\n                                <Select\n                                    placeholder=\"Year\"\n                                    value={selectedYear}\n                                    onChange={selectedOption => {\n                                        handleYearChange(selectedOption);\n                                        // handleYearChange(selectedOption, values);\n                                        // values.year = selectedOption.value;\n                                        console.log(\"values\", values.year);\n                                        handleChange(\"year\");\n                                    }}\n                                    isSearchable={true}\n                                    options={yearOptions}\n                                    name=\"year\"\n                                    isLoading={false}\n                                    loadingMessage={() => \"Fetching year\"}\n                                    noOptionsMessage={() => \"Year appears here\"}\n                                />\n                                {errors.year}\n                            </Grid>\n                            <Grid\n                                item\n                                md={4}\n                                style={{ marginTop: \"24px\", marginBottom: \"10px\" }}\n                                xs={12}\n                            >\n                                <Button onClick={handleSubmit}>Save</Button>\n                            </Grid>\n                        </Grid>\n                    </>\n                );\n            }}\n        </Formik>\n    );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}